#include<iostream>

using namespace std;
class treenode{
public:
	int value;
	treenode* left;
	treenode* right;
	
	
	treenode()
	{
		value=0;
		left=NULL;
		right=NULL;
	}
	treenode(int v)
	{
		value =v;
		left = NULL;
		right =NULL;
	}
};

class bst{
public:
	treenode* root;
	bst()
	{
		root =NULL;
	}
	
	bool isEmpty(){
		if(root == NULL)
			return true;
		else
			return false;
	}
	
	void insert(treenode* new_node)
	{
		if(root == NULL)
			root = new_node;
		else{
			treenode* temp =root;
			while(temp!=NULL)
			{
				if(new_node->value == temp->value)
					return;
				else if((new_node->value <temp->value)&& (temp->left==NULL)) 
				{
					temp->left = new_node;
					break;
				}
				else if((new_node->value > temp->value) && (temp->right ==NULL))
				{
					temp->right =new_node;
					break;
				}
				else{
					temp =temp->right;
				}
			}
		}
	}
	
	void disp(treenode* root){
	
		if(root ==NULL)
			return;
		cout<<root->value<<endl;
		disp(root->left);
		disp(root->right);
	}
};





int main(){
bst obj;
	
	int option,val;
	do{
		cout<<"Selet operation: (press 0 t exit)"<<endl;
		cout<<"1. insert"<<endl;
	
		cout<<"2. print BST values"<<endl;
		cout<<"3. clearscreen"<<endl;
		cout<<"0. exit"<<endl;
		cin>>option;
		
		treenode *new_node = new treenode();
		switch(option){
			
			case 0:
				break;
			case 1:
				cout<<"insert"<<endl;
				cout<<"enter the value:";
				cin>>val;
				new_node->value=val;
				obj.insert(new_node);
				cout<<endl;
				break;
		
			case 2:
			    cout<<"print"<<endl;
			    obj.disp(obj.root);
			  
				break;	
			case 3:
			    cout<<"clearscreen"<<endl;
			    
				break;
			default:
				cout<<"wrong chice";		
		}
		
		
	}while(option!=0);
	
	
	
	
	return 0;
}
